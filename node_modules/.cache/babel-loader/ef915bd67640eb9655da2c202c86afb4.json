{"ast":null,"code":"var _jsxFileName = \"/Users/Aaron/OneDrive/Courses/JavaScript/Scrimba Learn React Course/my-app2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport Die from \"./Die\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n    }\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  } // const diceElements = dice.map(die => (\n  //   <Die \n  //       key={die.id} \n  //       value={die.value} \n  //       isHeld={die.isHeld} \n  //       holdDice={() => holdDice(die.id)}\n  //   />\n  // ))\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \"hey\", /*#__PURE__*/_jsxDEV(Die, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Die, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Die, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Die, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YgqwSIDfuzqg6GTd1nJMCZRKU0o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Aaron/OneDrive/Courses/JavaScript/Scrimba Learn React Course/my-app2/src/App.js"],"names":["logo","React","nanoid","Confetti","Die","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","generateNewDie","value","Math","ceil","random","isHeld","id","newDice","i","push","rollDice","oldDice","map","die","holdDice"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAeC,UAAU,EAAzB,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B;;AAEA,WAASI,cAAT,GAA0B;AACxB,WAAO;AACHC,MAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CADJ;AAEHC,MAAAA,MAAM,EAAE,KAFL;AAGHC,MAAAA,EAAE,EAAEhB,MAAM;AAHP,KAAP;AAKH;;AACC,WAASO,UAAT,GAAsB;AACpB,UAAMU,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBD,MAAAA,OAAO,CAACE,IAAR,CAAaT,cAAc,EAA3B;AACH;;AACD,WAAOO,OAAP;AACH;;AAED,WAASG,QAAT,GAAoB;AAClB,QAAG,CAACZ,OAAJ,EAAa;AACTH,MAAAA,OAAO,CAACgB,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYC,GAAG,IAAI;AAClC,eAAOA,GAAG,CAACR,MAAJ,GACHQ,GADG,GAEHb,cAAc,EAFlB;AAGH,OAJkB,CAAZ,CAAP;AAKH,KAND,MAMO;AACHD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,OAAO,CAACE,UAAU,EAAX,CAAP;AACH;AACF;;AAED,WAASiB,QAAT,CAAkBR,EAAlB,EAAsB;AACpBX,IAAAA,OAAO,CAACgB,OAAO,IAAIA,OAAO,CAACC,GAAR,CAAYC,GAAG,IAAI;AAClC,aAAOA,GAAG,CAACP,EAAJ,KAAWA,EAAX,GACH,EAAC,GAAGO,GAAJ;AAASR,QAAAA,MAAM,EAAE,CAACQ,GAAG,CAACR;AAAtB,OADG,GAEHQ,GAFJ;AAGH,KAJkB,CAAZ,CAAP;AAKD,GAtCc,CAwCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,sBAME,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9DQpB,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\"\nimport {nanoid} from \"nanoid\"\nimport Confetti from \"react-confetti\"\nimport Die from \"./Die\"\n\n\nfunction App() {\n  const [dice, setDice] = React.useState(allNewDice())\n  const [tenzies, setTenzies] = React.useState(false)\n\n  function generateNewDie() {\n    return {\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n    }\n}  \n  function allNewDice() {\n    const newDice = []\n    for (let i = 0; i < 10; i++) {\n        newDice.push(generateNewDie())\n    }\n    return newDice\n}\n\nfunction rollDice() {\n  if(!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n          return die.isHeld ? \n              die :\n              generateNewDie()\n      }))\n  } else {\n      setTenzies(false)\n      setDice(allNewDice())\n  }\n}\n\nfunction holdDice(id) {\n  setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? \n          {...die, isHeld: !die.isHeld} :\n          die\n  }))\n}\n\n// const diceElements = dice.map(die => (\n//   <Die \n//       key={die.id} \n//       value={die.value} \n//       isHeld={die.isHeld} \n//       holdDice={() => holdDice(die.id)}\n//   />\n// ))\n\n  return (\n    <main className=\"App\">\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">Roll until all dice are the same. \n            Click each die to freeze it at its current value between rolls.</p>\n      \n      hey\n      <Die/>\n      <Die/>\n      <Die/>\n      <Die/>\n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}